name: Plan
on:
  workflow_run:
    workflows: ["Validate"]
    types: [completed]

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_VERSION: '1.5.7'
  TG_VERSION: 'v0.58.2'

jobs:
  terraform-plan:
    name: Terraform plan
    runs-on: ubuntu-latest    
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check out base ref
        run: |
          git fetch --no-tags --depth=1 origin $GITHUB_BASE_REF
          git fetch --no-tags --depth=1 origin $GITHUB_HEAD_REF
          echo $GITHUB_BASE_REF
          echo $GITHUB_HEAD_REF

      - name: Get working directory
        run: |
          CODE_DIR=$(git --no-pager diff --diff-filter=d --raw --name-only origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF | egrep -E "\.tf\$|^\/dev|^\/staging|^\/prod" | grep ".*\/" -o | uniq)
          echo "WORKING_DIR=$CODE_DIR" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::522922866161:role/tfg-repo-base-cicd

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: $TF_VERSION

      - name: Verify Terraform version
        run: terraform --version
      
      - name: Setup Terragrunt
        run: |
          curl -s -qL -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /bin
      
      - name: Verify Terragrunt version
        run: terragrunt --version

      - name: Terragrunt init
        id: init
        run: terragrunt init -input=false -reconfigure --terragrunt-working-dir ${{ env.WORKING_DIR }}
      
      - name: Terragrunt plan
        id: plan
        run: terragrunt plan --terragrunt-working-dir ${{ env.WORKING_DIR }} -out workspace.plan -no-color
        continue-on-error: true

      - name: Post Plan comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Plan')
            })

            const output = `#### Terraform Plan üìù\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>
  
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\` in Path: \`${{ env.WORKING_DIR }}\`*`;

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  Infracost:
    name: Infracost
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
    runs-on: ubuntu-latest
    needs: terraform-plan
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check out base ref
      run: |
        git fetch --no-tags --depth=1 origin $GITHUB_BASE_REF
        git fetch --no-tags --depth=1 origin $GITHUB_HEAD_REF
        echo $GITHUB_BASE_REF
        echo $GITHUB_HEAD_REF

    - name: Get working directory
      run: |
        CODE_DIR=$(git --no-pager diff --diff-filter=d --raw --name-only origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF | egrep -E "\.tf\$|^\/dev|^\/staging|^\/prod" | grep ".*\/" -o | uniq)
        echo "WORKING_DIR=$CODE_DIR" >> $GITHUB_ENV

    - name: Setup Infracost
      uses: infracost/actions/setup@v3
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: '${{ github.event.pull_request.base.ref }}'

    - name: Infracost Breakdown of base branch
      run: |
        infracost breakdown --path=${{ env.WORKING_DIR }} --format=json --out-file=/tmp/infracost-base.json

    - name: Checkout PR branch
      uses: actions/checkout@v4

    - name: Infracost Diff Base vs PR Branch
      run: |
        infracost diff --path=${{ env.WORKING_DIR }} --format=json --compare-to=/tmp/infracost-base.json --out-file=/tmp/infracost.json

    - name: Infracost PR comment
      run: |
        infracost comment github --path=/tmp/infracost.json --repo=$GITHUB_REPOSITORY --github-token=${{ secrets.GITHUB_TOKEN }} --pull-request=${{ github.event.pull_request.number }} --behavior=update