name: Plan
on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_VERSION: '1.5.7'
  TG_VERSION: 'v0.58.2'

jobs:
  detect-folders:
    runs-on: ubuntu-latest
    name: detect folders to apply
    outputs:
      matrix: ${{ steps.detect-folders.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all changed directories into matrix
        id: detect-folders
        uses: tj-actions/changed-files@v44
        with:
          dir_names: 'true'
          matrix: 'true'
          files: |
             **.tf
      
      - name: List all changed folders
        run: echo '${{ steps.detect-folders.outputs.all_changed_files }}'

  tf-plan:
    name: Terraform plan
    runs-on: ubuntu-latest   
    needs: detect-folders
    strategy:
      fail-fast: false
      matrix:
        dirs: ${{ fromJSON(needs.detect-folders.outputs.matrix) }} 
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::522922866161:role/tfg-repo-base-cicd

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: $TF_VERSION

      - name: Verify Terraform version
        run: terraform --version
      
      - name: Setup Terragrunt
        run: |
          curl -s -qL -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /bin
          terragrunt --version

      - name: Terragrunt init
        id: init
        run: terragrunt init -input=false -reconfigure --terragrunt-working-dir ${{ matrix.dirs }}
      
      - name: Terragrunt plan
        id: plan
        run: terragrunt plan --terragrunt-working-dir ${{ matrix.dirs }} -out workspace.plan -no-color
        continue-on-error: true

      - name: Post Plan comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            const { data: comments } = await github.rest.issues.listComments({
              owner: owner,
              repo: repo,
              issue_number: issue_number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Terraform Plan') &&
              comment.body.includes(`Path: \`${{ matrix.dirs }}\``)
            );

            const planOutput = `#### Terraform Plan üìù for \`${{ matrix.dirs }}\`
            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: ${{ github.event_name }} in Path: \`${{ matrix.dirs }}\`*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: owner,
                repo: repo,
                comment_id: botComment.id,
                body: planOutput
              });
            } else {
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: issue_number,
                body: planOutput
              });
            }

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  run-infracost:
    name: Infracost
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
    runs-on: ubuntu-latest
    needs: [detect-folders, tf-plan]
    strategy:
      fail-fast: false
      matrix:
        dirs: ${{ fromJSON(needs.detect-folders.outputs.matrix) }} 
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Infracost
      uses: infracost/actions/setup@v3
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: '${{ github.event.pull_request.base.ref }}'

    - name: Infracost Breakdown of base branch
      run: |
        CLEANED_DIR=$(echo "${{ matrix.dirs }}" | sed 's/[^a-zA-Z0-9]/_/g')
        mkdir -p /tmp/infracost-base
        infracost breakdown --path=${{ matrix.dirs }} --format=json --out-file=/tmp/infracost-base/infracost-base-${CLEANED_DIR}.json

    - name: Checkout PR branch
      uses: actions/checkout@v4

    - name: Infracost Diff Base vs PR Branch
      run: |
        CLEANED_DIR=$(echo "${{ matrix.dirs }}" | sed 's/[^a-zA-Z0-9]/_/g')
        mkdir -p /tmp/infracost-diff
        infracost diff --path=${{ matrix.dirs }} --format=json --compare-to=/tmp/infracost-base/infracost-base-${CLEANED_DIR}.json --out-file=/tmp/infracost-diff/infracost-diff-${CLEANED_DIR}-${CLEANED_DIR}.json

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: infracost-results-${{ matrix.dirs }}
        path: /tmp/infracost-diff/

  post-infracost:
    name: Combine Infracost Results
    runs-on: ubuntu-latest
    needs: [detect-folders,tf-plan,run-infracost]
    steps:
    - name: Setup Infracost
      uses: infracost/actions/setup@v3
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: infracost-results-${{ matrix.dirs }}
        path: /tmp/infracost-results

    - name: Combine JSON results
      run: |
          infracost output --path "/tmp/infracost-results/**/*.json" --format json --out-file /tmp/infracost-combined.json

    - name: Infracost PR comment
      run: |
        infracost comment github --path=/tmp/infracost-combined.json --repo=$GITHUB_REPOSITORY --github-token=${{ secrets.GITHUB_TOKEN }} --pull-request=${{ github.event.pull_request.number }} --behavior=update
